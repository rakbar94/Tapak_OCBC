import java.util.*;

public class tapak_ocbc {

    public static long getMinimumPenalty(int[] quantity, int m) {
        // Max heap untuk menyimpan stok terbesar dulu
        PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());
        for (int q : quantity) {
            if (q > 0) pq.add(q);
        }

        long penalty = 0;
        for (int i = 0; i < m; i++) {
            if (pq.isEmpty()) return -1; // tidak cukup stok

            int curr = pq.poll();   // stok terbesar
            penalty += curr;        // penalti = stok saat ini
            if (curr - 1 > 0) pq.add(curr - 1); // kurangi stok
        }

        return penalty;
    }

    // Contoh uji
    public static void main(String[] args) {
        int[] quantity = {5, 3};
        int m = 4;
        // Penjualan optimal: ambil dari stok 5 â†’ penalti 5, 4, 3, 2 = total 14
        System.out.println(getMinimumPenalty(quantity, m)); // Expected: 14
    }
}
